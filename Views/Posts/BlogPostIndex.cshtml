@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService imageService
@inject UserManager<BlogUser> userManager

@model IPagedList<Post>

@{
    ViewData["Title"] = "Blog Index";
}

<!-- Main Content-->
<div class="row">
    @foreach (var post in Model)
    {
        // Is the logged in user the Author of this post?
        var isAuthor = false;
        if (User.Identity.IsAuthenticated)
        {
            isAuthor = User.IsInRole(BlogRole.GuestAuthor.ToString());
            isAuthor = isAuthor && (post.BlogUserId == userManager.GetUserId(User));
        }

        <div class="col-sm-12 col-md-6 col-lg-4 mt-2">
            <div class="card border-dark h-100">
                <div class="card-body text-center d-flex flex-column">
                    <div>
                        <div class="bg-warning">
                            <hr class="card-hr" />
                            <h5 class="card-title">@post.Title</h5>
                            <hr class="card-hr" />
                        </div>

                        <p class="card-text cftooltip">
                            @post.Abstract
                        </p>

                        <span></span>
                    </div>

                    <div class="text-center d-grid mt-auto">
                        <a class="btn btn-dark btn-sm mb-2" asp-controller="Posts" asp-action="Details" asp-route-slug="@post.Slug">
                            Read More
                        </a>
                    </div>

                    @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                    {
                        <div class="text-center d-grid">
                            <a class="btn btn-dark btn-sm mb-2" asp-controller="Posts" asp-action="Edit" asp-route-id="@post.Id">
                                Edit Post
                            </a>
                        </div>
                    }
                </div>
                
                <img class="card-img-bottom" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" alt="Card Image" />
            </div>
        </div>
    }
</div>

<hr />

<!-- Add Paging controls here -->
<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
         new PagedListRenderOptions
         {
             LiElementClasses = new string[] { "page-item" },
             PageClasses = new string[] { "page-link" }
         })
    </div>
</div>